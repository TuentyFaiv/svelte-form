---
import { getRelativeLocaleUrl } from "astro:i18n";
import { Image } from "astro:assets";
import { Theme } from "@sharing/atoms";

import IconGitHub from "@icons/icon-github.png";

interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;

const home = getRelativeLocaleUrl(lang, "/");
const docs = getRelativeLocaleUrl(lang, "docs");
const packages = getRelativeLocaleUrl(lang, "packages");

const currentPathname = Astro.url.pathname;
const pathname = {
  es: `${lang === "es" ? "" : "/es"}${Astro.url.pathname}`,
  en: Astro.url.pathname.replace(`${lang}/`, ""),
};
const langs: {
  lang: "es" | "en";
  path: string;
  label: string;
}[] = [
  {
    lang: "en",
    path: pathname.en,
    label: "English",
  },
  {
    lang: "es",
    path: pathname.es,
    label: "Espa√±ol",
  },
];
---

<header class="header">
  <p class="header__logo">
    <a href={home}>
      faivform
    </a>
  </p>
  <nav class="header__nav">
    <ul class="header__list">
      <li class="header__item">
        <a href="https://www.npmjs.com/package/@tuentyfaiv/svelte-form" class="header__link header__link--icon" target="_blank" rel="noopener noreferrer">
          <Image src={IconGitHub} alt="GitHub Icon" class="header__icon" />
        </a>
      </li>
      <li class="header__item">
        <a href={docs} class="header__link">Docs</a>
      </li>
      <li class="header__item">
        <a href={packages} class="header__link">Packages</a>
      </li>
      <li class="header__item">
        <Theme client:load />
      </li>
      <li class="header__item">
        <label for="language" class="header__lang">
          <select name="language" id="language" class="header__lang-select">
            {langs.map((locale) => (
              <option selected={pathname[locale.lang] === currentPathname} value={locale.path}>{locale.label}</option>
            ))}
          </select>
        </label>
      </li>
    </ul>
  </nav>
</header>

<script>
  const select: HTMLSelectElement | null = document.querySelector("select#language");
  select?.addEventListener("change", (event) => {
    const path = (event.target as HTMLSelectElement).value;

    window.location.pathname = path;
  });
</script>

<style>
  .header {
    @apply w-full flex justify-between items-center p-4;
    &__logo {
      @apply text-2xl font-bold uppercase;
    }
    &__nav {
      @apply w-max;
    }
    &__list {
      @apply flex items-center justify-center gap-3;
    }
    &__item {
      @apply w-max;
    }
    &__link {
      @apply block font-medium py-2 px-4 hover:text-slate-500;
      &--icon {
        @apply w-10 h-10 p-0;
      }
    }
    &__icon {
      @apply block w-full h-full object-contain;
    }
    &__lang {
      @apply flex justify-center items-center gap-1 hover:cursor-pointer;
    }
    &__lang-select {
      @apply block font-medium appearance-none bg-transparent py-2 px-4 hover:cursor-pointer;
    }
  }
</style>
